import { notFound } from 'next/navigation';
import type { Metadata } from 'next';
import { prisma } from '@/lib/prisma';
import { CV_THEMES, resolveCvTheme } from '@/config/cv';
import { marked } from 'marked';

export const dynamic = 'force-dynamic';

export async function generateMetadata({ params }: { params: Promise<{ slug: string }> }): Promise<Metadata> {
  const { slug } = await params;
  const resume = await prisma.resumeDraft.findFirst({
    where: { shareSlug: slug, isShared: true },
    select: { title: true },
  });

  if (!resume) {
    return { title: 'CV Luna | Phoenix' };
  }

  return {
    title: `CV Luna – ${resume.title ?? 'Parcours'}`,
    description: 'CV narratif généré par Phoenix',
  };
}

export default async function CvSharePage({ params }: { params: Promise<{ slug: string }> }) {
  const { slug } = await params;
  const draft = await prisma.resumeDraft.findFirst({
    where: { shareSlug: slug, isShared: true },
    select: {
      title: true,
      template: true,
      tone: true,
      language: true,
      element: true,
      theme: true,
      content: true,
      createdAt: true,
      updatedAt: true,
    },
  });

  if (!draft) {
    notFound();
  }

  const content = (draft.content as { resumeMarkdown?: string; atsChecklist?: string[] } | null) ?? null;
  const markdown = content?.resumeMarkdown ?? '# CV\n\nContenu indisponible';
  const html = marked.parse(markdown) as string;

  const themeKey = resolveCvTheme((draft.theme ?? draft.element) ?? undefined);
  const theme = CV_THEMES[themeKey];

  return (
    <div className="min-h-screen bg-slate-950 py-16 text-white">
      <div
        className={`mx-auto w-full max-w-4xl overflow-hidden rounded-3xl border shadow-xl bg-slate-950/85 backdrop-blur ${theme.border}`}
        style={{ boxShadow: '0 25px 60px rgba(15, 23, 42, 0.45)' }}
      >
        <div className={`h-1.5 w-full bg-gradient-to-r ${theme.gradient}`}></div>
        <header className="flex flex-col gap-2 border-b border-white/10 p-8">
          <p className={`text-xs uppercase tracking-[0.4em] ${theme.accent}`}>Phoenix · Profil Luna</p>
          <h1 className="text-3xl font-semibold text-white">{draft.title ?? 'CV partagée'}</h1>
          <p className="text-sm text-white/60">
            Generated by Luna — template {draft.template}, ton {draft.tone ?? 'impact'}, {draft.language === 'en' ? 'English' : 'Français'}.
          </p>
        </header>
        <main className="prose prose-invert max-w-none space-y-6 px-8 py-10" dangerouslySetInnerHTML={{ __html: html }} />
        {content?.atsChecklist && content.atsChecklist.length > 0 && (
          <footer className="border-t border-white/10 px-8 py-6 text-sm text-white/70">
            <p className="text-xs uppercase tracking-wide text-white/40">Checklist ATS</p>
            <ul className="mt-3 space-y-1">
              {content.atsChecklist.map((item, index) => (
                <li key={index}>• {item}</li>
              ))}
            </ul>
          </footer>
        )}
      </div>
    </div>
  );
}
